$date
	Sat Aug 19 00:18:00 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module fir_tb $end
$var wire 19 ! y [18:0] $end
$var wire 1 " valid_out $end
$var reg 1 # clock $end
$var reg 1 $ reset $end
$var reg 1 % valid_in $end
$var reg 8 & x [7:0] $end
$scope module dut $end
$var wire 1 # clock $end
$var wire 1 ' control_clock $end
$var wire 1 ( control_io_valid_in $end
$var wire 1 ) control_reset $end
$var wire 1 % io_valid_in $end
$var wire 1 " io_valid_out $end
$var wire 8 * io_x [7:0] $end
$var wire 19 + io_y [18:0] $end
$var wire 1 , mac_clock $end
$var wire 1 - mac_io_mac_init $end
$var wire 8 . mac_io_ram_out [7:0] $end
$var wire 8 / mac_io_rom_out [7:0] $end
$var wire 1 0 mac_reset $end
$var wire 1 1 ram_clock $end
$var wire 3 2 ram_io_addr [2:0] $end
$var wire 8 3 ram_io_di [7:0] $end
$var wire 1 4 ram_io_en $end
$var wire 1 5 ram_io_we $end
$var wire 1 6 ram_reset $end
$var wire 1 $ reset $end
$var wire 1 7 rom_clock $end
$var wire 3 8 rom_io_addr [2:0] $end
$var wire 1 9 rom_io_en $end
$var wire 1 : rom_reset $end
$var wire 8 ; rom_io_rom_out [7:0] $end
$var wire 8 < ram_io_dio [7:0] $end
$var wire 19 = mac_io_y [18:0] $end
$var wire 1 > mac_io_valid_out $end
$var wire 1 ? control_io_we $end
$var wire 3 @ control_io_rom_address [2:0] $end
$var wire 3 A control_io_ram_address [2:0] $end
$var wire 1 B control_io_mac_init $end
$var wire 1 C control_io_en $end
$var reg 1 - mac_init_control_unit $end
$var reg 8 D xt [7:0] $end
$scope module control $end
$var wire 1 E _GEN_0 $end
$var wire 1 F _GEN_1 $end
$var wire 1 G _GEN_12 $end
$var wire 1 H _GEN_13 $end
$var wire 1 I _GEN_14 $end
$var wire 1 J _GEN_8 $end
$var wire 1 ' clock $end
$var wire 1 C io_en $end
$var wire 1 B io_mac_init $end
$var wire 1 ( io_valid_in $end
$var wire 1 ? io_we $end
$var wire 1 ) reset $end
$var wire 3 K io_rom_address [2:0] $end
$var wire 3 L io_ram_address [2:0] $end
$var wire 3 M _counter_T_1 [2:0] $end
$var wire 1 N _T $end
$var wire 1 O _GEN_7 $end
$var wire 1 P _GEN_6 $end
$var wire 1 Q _GEN_2 $end
$var reg 3 R counter [2:0] $end
$var reg 1 S ent $end
$var reg 1 T mac_initt $end
$var reg 3 U ram_addresst [2:0] $end
$var reg 3 V rom_addresst [2:0] $end
$var reg 1 W wet $end
$upscope $end
$scope module mac $end
$var wire 1 X _GEN_4 $end
$var wire 1 Y _T_9 $end
$var wire 1 , clock $end
$var wire 1 - io_mac_init $end
$var wire 8 Z io_ram_out [7:0] $end
$var wire 8 [ io_rom_out [7:0] $end
$var wire 19 \ io_y [18:0] $end
$var wire 1 0 reset $end
$var wire 1 > io_valid_out $end
$var wire 19 ] _yt_T_4 [18:0] $end
$var wire 19 ^ _yt_T_1 [18:0] $end
$var wire 16 _ _yt_T [15:0] $end
$var wire 3 ` _counter_T_1 [2:0] $end
$var wire 1 a _T_5 $end
$var wire 19 b _GEN_7 [18:0] $end
$var reg 3 c counter [2:0] $end
$var reg 1 > valid_outt $end
$var reg 19 d yt [18:0] $end
$upscope $end
$scope module ram $end
$var wire 1 1 clock $end
$var wire 3 e io_addr [2:0] $end
$var wire 8 f io_di [7:0] $end
$var wire 8 g io_dio [7:0] $end
$var wire 1 4 io_en $end
$var wire 1 5 io_we $end
$var wire 1 6 reset $end
$var wire 8 h _GEN_6 [7:0] $end
$var wire 8 i _GEN_5 [7:0] $end
$var wire 8 j _GEN_4 [7:0] $end
$var wire 8 k _GEN_3 [7:0] $end
$var wire 8 l _GEN_2 [7:0] $end
$var wire 8 m _GEN_1 [7:0] $end
$var reg 8 n diot [7:0] $end
$var reg 8 o ram_0 [7:0] $end
$var reg 8 p ram_1 [7:0] $end
$var reg 8 q ram_2 [7:0] $end
$var reg 8 r ram_3 [7:0] $end
$var reg 8 s ram_4 [7:0] $end
$var reg 8 t ram_5 [7:0] $end
$var reg 8 u ram_6 [7:0] $end
$var reg 8 v ram_7 [7:0] $end
$upscope $end
$scope module rom $end
$var wire 1 7 clock $end
$var wire 3 w io_addr [2:0] $end
$var wire 1 9 io_en $end
$var wire 1 : reset $end
$var wire 8 x io_rom_out [7:0] $end
$var wire 8 y _GEN_5 [7:0] $end
$var wire 8 z _GEN_4 [7:0] $end
$var wire 8 { _GEN_3 [7:0] $end
$var wire 8 | _GEN_2 [7:0] $end
$var wire 8 } _GEN_1 [7:0] $end
$var reg 8 ~ romt [7:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 !" i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 !"
b0 ~
b1000 }
b1000 |
b1000 {
b1000 z
b1000 y
b0 x
b0 w
b0 v
b0 u
b0 t
b0 s
b0 r
b0 q
b0 p
b0 o
b0 n
b0 m
b0 l
b0 k
b0 j
b0 i
b0 h
b0 g
b0 f
b0 e
b0 d
b0 c
b0 b
0a
b1 `
b0 _
b0 ^
b0 ]
b0 \
b0 [
b0 Z
0Y
0X
0W
b0 V
b0 U
0T
0S
b0 R
0Q
0P
0O
1N
b1 M
b0 L
b0 K
1J
1I
0H
0G
0F
0E
b0 D
0C
0B
b0 A
b0 @
0?
0>
b0 =
b0 <
b0 ;
1:
09
b0 8
17
16
05
04
b0 3
b0 2
11
10
b0 /
b0 .
x-
1,
b0 +
b0 *
1)
0(
1'
b0 &
0%
1$
1#
0"
b0 !
$end
#5
b1 !"
00
0)
06
0:
0$
0,
0'
01
07
0#
#10
1Q
b10 `
b1 c
1B
1T
0-
1,
1'
11
17
1#
#15
1G
1H
0,
0'
01
07
0#
b10 !"
b1 &
b1 *
1(
1%
#20
0I
1P
1O
0J
1G
1H
1E
1F
0Q
b11 `
b10 c
15
1?
1W
19
14
1C
1S
0N
b10 M
b1 R
b1 3
b1 f
b1 D
1-
1,
1'
11
17
1#
#25
0,
0'
01
07
0#
b11 !"
b10 &
b10 *
#30
b111 y
b111 z
b111 {
b111 |
b111 }
b1 `
b0 c
b1 2
b1 e
b1 A
b1 L
b1 U
b1 8
b1 w
b1 @
b1 K
b1 V
0B
0T
b11 M
b10 R
b1000 ^
b1000 ]
b1000 b
b1000 _
b1 .
b1 Z
b1 <
b1 g
b1 n
b1 o
b1000 /
b1000 [
b1000 ;
b1000 x
b1000 ~
b10 3
b10 f
b10 D
1,
1'
11
17
1#
#35
0,
0'
01
07
0#
b100 !"
b11 &
b11 *
#40
b110 y
b110 z
b110 {
b1000 }
b110 |
b10 m
b1000 !
b1000 +
b1000 =
b1000 \
b1000 d
b10 2
b10 e
b10 A
b10 L
b10 U
b10 8
b10 w
b10 @
b10 K
b10 V
b100 M
b11 R
b10 .
b10 Z
b10 <
b10 g
b10 n
b1 p
b10 o
b1110 ^
b10110 ]
b1110 b
b1110 _
b111 /
b111 [
b111 ;
b111 x
b111 ~
b11 3
b11 f
b11 D
0-
1,
1'
11
17
1#
#45
0,
0'
01
07
0#
b101 !"
b100 &
b100 *
#50
b101 y
b101 z
b1000 |
b101 {
b11 l
b11 m
b10110 !
b10110 +
b10110 =
b10110 \
b10110 d
b10 `
b1 c
b11 2
b11 e
b11 A
b11 L
b11 U
b11 8
b11 w
b11 @
b11 K
b11 V
b101 M
b100 R
b11 .
b11 Z
b11 <
b11 g
b11 n
b1 q
b10 p
b11 o
b10010 ^
b101000 ]
b10010 b
b10010 _
b110 /
b110 [
b110 ;
b110 x
b110 ~
b100 3
b100 f
b100 D
1,
1'
11
17
1#
#55
0,
0'
01
07
0#
b110 !"
b101 &
b101 *
#60
b100 y
b100 l
b1000 {
b100 z
b100 k
b100 m
b101000 !
b101000 +
b101000 =
b101000 \
b101000 d
b11 `
b10 c
b100 2
b100 e
b100 A
b100 L
b100 U
b100 8
b100 w
b100 @
b100 K
b100 V
b110 M
b101 R
b100 .
b100 Z
b100 <
b100 g
b100 n
b1 r
b10 q
b11 p
b100 o
b10100 ^
b111100 ]
b10100 b
b10100 _
b101 /
b101 [
b101 ;
b101 x
b101 ~
b101 3
b101 f
b101 D
1,
1'
11
17
1#
#65
0,
0'
01
07
0#
b111 !"
b110 &
b110 *
#70
b101 k
b101 l
b1000 z
b11 y
b101 j
b101 m
b111100 !
b111100 +
b111100 =
b111100 \
b111100 d
b100 `
b11 c
b101 2
b101 e
b101 A
b101 L
b101 U
b101 8
b101 w
b101 @
b101 K
b101 V
b111 M
b110 R
b101 .
b101 Z
b101 <
b101 g
b101 n
b1 s
b10 r
b11 q
b100 p
b101 o
b10100 ^
b1010000 ]
b10100 b
b10100 _
b100 /
b100 [
b100 ;
b100 x
b100 ~
b110 3
b110 f
b110 D
1,
1'
11
17
1#
#75
0,
0'
01
07
0#
b1000 !"
b111 &
b111 *
#80
b110 j
b110 k
b110 l
b1000 y
b110 i
b110 m
b1010000 !
b1010000 +
b1010000 =
b1010000 \
b1010000 d
b101 `
b100 c
b110 2
b110 e
b110 A
b110 L
b110 U
b110 8
b110 w
b110 @
b110 K
b110 V
b0 M
b111 R
b110 .
b110 Z
b110 <
b110 g
b110 n
b1 t
b10 s
b11 r
b100 q
b101 p
b110 o
b10010 ^
b1100010 ]
b10010 b
b10010 _
b11 /
b11 [
b11 ;
b11 x
b11 ~
b111 3
b111 f
b111 D
1,
1'
11
17
1#
#85
0(
0%
0,
0'
01
07
0#
b1001 !"
b1000 &
b1000 *
#90
b111 i
b111 j
1I
0H
0G
b111 k
1J
0O
0P
b111 l
b111 h
b111 m
b1100010 !
b1100010 +
b1100010 =
b1100010 \
b1100010 d
b110 `
b101 c
b111 2
b111 e
b111 A
b111 L
b111 U
b111 8
b111 w
b111 @
b111 K
b111 V
1N
b1 M
b0 R
b111 .
b111 Z
b111 <
b111 g
b111 n
b1 u
b10 t
b11 s
b100 r
b101 q
b110 p
b111 o
b1110 ^
b1110000 ]
b1110 b
b1110 _
b10 /
b10 [
b10 ;
b10 x
b10 ~
b1000 3
b1000 f
b1000 D
1,
1'
11
17
1#
#95
0,
0'
01
07
0#
#100
b1000 h
b1000 i
b1000 j
b1000 k
1X
b1000 l
1Q
0F
0E
b1000 m
b1110000 !
b1110000 +
b1110000 =
b1110000 \
b1110000 d
1a
b111 `
b110 c
1B
1T
05
0?
0W
09
04
0C
0S
b1000 .
b1000 Z
b1000 <
b1000 g
b1000 n
b1 v
b10 u
b11 t
b100 s
b101 r
b110 q
b111 p
b1000 o
b1000 ^
b1111000 ]
b1000 b
b1000 _
b1 /
b1 [
b1 ;
b1 x
b1 ~
1,
1'
11
17
1#
#105
0,
0'
01
07
0#
#110
0X
1"
1>
b1111000 !
b1111000 +
b1111000 =
b1111000 \
b1111000 d
0a
b1 `
b0 c
b0 .
b0 Z
b0 <
b0 g
b0 n
b0 ^
b1111000 ]
b0 b
b0 _
b0 /
b0 [
b0 ;
b0 x
b0 ~
1-
1,
1'
11
17
1#
#115
0,
0'
01
07
0#
#120
0"
0>
b0 ]
b0 !
b0 +
b0 =
b0 \
b0 d
1,
1'
11
17
1#
#125
0,
0'
01
07
0#
#130
1,
1'
11
17
1#
#135
0,
0'
01
07
0#
#140
1,
1'
11
17
1#
#145
0,
0'
01
07
0#
#150
1,
1'
11
17
1#
#155
0,
0'
01
07
0#
#160
1,
1'
11
17
1#
#165
0,
0'
01
07
0#
#170
1,
1'
11
17
1#
#175
0,
0'
01
07
0#
#180
1,
1'
11
17
1#
#185
0,
0'
01
07
0#
